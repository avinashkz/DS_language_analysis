# 554 (milestones)
lab1 <- 39
proposal <- 83
milestone2 <- 80
milestone3 <- 80
total <- 0.30*(lab1) + 0.10*(proposal) + 0.20*(milestone2) + 0.40*(milestone3)
total
milestone2 <- 90
total <- 0.30*(lab1) + 0.10*(proposal) + 0.20*(milestone2) + 0.40*(milestone3)
total
knitr::opts_chunk$set(echo = TRUE)
survey <- read.csv("../data/survey_responses.csv", stringsAsFactors = FALSE)[-c(1,2)] %>%
transmute(background = ifelse(!(What.is.your.academic.background. %in% c("Computer Science / Computer Engineering", "Mathematics / Statistics")), "Other", What.is.your.academic.background.),
coding_experience = How.many.years.of.coding.experience.do.you.have.prior.to.using.Python.R.,
coding_love = Do.you.enjoy.love.coding.,
first_language = Which.programming.language.did.you.learn.first.,
language_preference = Which.of.the.following.programming.languages.do.you.prefer.more.,
task_preference = What.is.your.favorite.data.science.task.)
library(dplyr)
survey <- read.csv("../data/survey_responses.csv", stringsAsFactors = FALSE)[-c(1,2)] %>%
transmute(background = ifelse(!(What.is.your.academic.background. %in% c("Computer Science / Computer Engineering", "Mathematics / Statistics")), "Other", What.is.your.academic.background.),
coding_experience = How.many.years.of.coding.experience.do.you.have.prior.to.using.Python.R.,
coding_love = Do.you.enjoy.love.coding.,
first_language = Which.programming.language.did.you.learn.first.,
language_preference = Which.of.the.following.programming.languages.do.you.prefer.more.,
task_preference = What.is.your.favorite.data.science.task.)
survey
survey$background
unique(survey$background)
survey <- read.csv("../data/survey_responses.csv", stringsAsFactors = FALSE)[-c(1,2)] %>%
transmute(background = What.is.your.academic.background.,
coding_experience = How.many.years.of.coding.experience.do.you.have.prior.to.using.Python.R.,
coding_love = Do.you.enjoy.love.coding.,
first_language = Which.programming.language.did.you.learn.first.,
language_preference = Which.of.the.following.programming.languages.do.you.prefer.more.,
task_preference = What.is.your.favorite.data.science.task.)
unique(survey$background)
unique(survey$first_language)
survey %>%
group_by(first_language) %>%
count()
library(stringr)
str_detect("FInance business engineering", c("business", "finance"))
sum(str_detect("FInance business engineering", c("business", "finance")))
survey %>%
mutate(background = ifelse(!(background %in% c("Computer Science / Computer Engineering", "Mathematics / Statistics")), "Other",
ifelse(sum((str_detect(tolower(background), c("economics", "business", "finance")))) > 0 , "Business / Economics",
ifelse((str_detect(tolower(background), "eng")), "Engineering", "Other")
)))
survey %>%
group_by(background) %>%
count()
survey <- survey %>%
mutate(background = ifelse(!(background %in% c("Computer Science / Computer Engineering", "Mathematics / Statistics")), "Other",
ifelse(sum((str_detect(tolower(background), c("economics", "business", "finance")))) > 0 , "Business / Economics",
ifelse((str_detect(tolower(background), "eng")), "Engineering", "Other")
)))
survey %>%
group_by(background) %>%
count()
survey <- read.csv("../data/survey_responses.csv", stringsAsFactors = FALSE)[-c(1,2)] %>%
transmute(background = What.is.your.academic.background.,
coding_experience = How.many.years.of.coding.experience.do.you.have.prior.to.using.Python.R.,
coding_love = Do.you.enjoy.love.coding.,
first_language = Which.programming.language.did.you.learn.first.,
language_preference = Which.of.the.following.programming.languages.do.you.prefer.more.,
task_preference = What.is.your.favorite.data.science.task.)
survey %>%
group_by(background) %>%
count()
survey <- survey %>%
mutate(background = ifelse(background %in% c("Computer Science / Computer Engineering", "Mathematics / Statistics"), background,
ifelse(sum((str_detect(tolower(background), c("economics", "business", "finance")))) > 0 , "Business / Economics",
ifelse((str_detect(tolower(background), "eng")), "Engineering", "Other")
)))
survey <- survey %>%
mutate(background = ifelse(background %in% c("Computer Science / Computer Engineering", "Mathematics / Statistics"), background,
ifelse(sum((str_detect(tolower(background), c("economics", "business", "finance")))) > 0 , "Business / Economics",
ifelse((str_detect(tolower(background), "eng")), "Engineering", "Other")
)))
survey %>%
group_by(background) %>%
count()
survey <- read.csv("../data/survey_responses.csv", stringsAsFactors = FALSE)[-c(1,2)] %>%
transmute(background = What.is.your.academic.background.,
coding_experience = How.many.years.of.coding.experience.do.you.have.prior.to.using.Python.R.,
coding_love = Do.you.enjoy.love.coding.,
first_language = Which.programming.language.did.you.learn.first.,
language_preference = Which.of.the.following.programming.languages.do.you.prefer.more.,
task_preference = What.is.your.favorite.data.science.task.)
survey <- survey %>%
rowwise() %>%
mutate(background = ifelse(background %in% c("Computer Science / Computer Engineering", "Mathematics / Statistics"), background,
ifelse(sum((str_detect(tolower(background), c("economics", "business", "finance")))) > 0 , "Business / Economics",
ifelse((str_detect(tolower(background), "eng")), "Engineering", "Other")
)))
survey %>%
group_by(background) %>%
count()
survey <- read.csv("../data/survey_responses.csv", stringsAsFactors = FALSE)[-c(1,2)] %>%
transmute(background = What.is.your.academic.background.,
coding_experience = How.many.years.of.coding.experience.do.you.have.prior.to.using.Python.R.,
coding_love = Do.you.enjoy.love.coding.,
first_language = Which.programming.language.did.you.learn.first.,
language_preference = Which.of.the.following.programming.languages.do.you.prefer.more.,
task_preference = What.is.your.favorite.data.science.task.)
survey
survey %>%
select(background)
survey <- read.csv("../data/survey_responses.csv", stringsAsFactors = FALSE)[-c(1,2)] %>%
transmute(background = What.is.your.academic.background.,
coding_experience = How.many.years.of.coding.experience.do.you.have.prior.to.using.Python.R.,
coding_love = Do.you.enjoy.love.coding.,
first_language = Which.programming.language.did.you.learn.first.,
language_preference = Which.of.the.following.programming.languages.do.you.prefer.more.,
task_preference = What.is.your.favorite.data.science.task.)
survey <- survey %>%
rowwise() %>%
mutate(background = ifelse(background %in% c("Computer Science / Computer Engineering", "Mathematics / Statistics"), background,
ifelse(sum((str_detect(tolower(background), c("economics", "business", "finance")))) > 0 , "Business / Economics",
ifelse((str_detect(tolower(background), "eng")), "Engineering", "Other")
)))
survey %>%
group_by(background) %>%
count()
survey
unique(survey$first_language)
survey %>%
mutate(first_language = ifelse(language_preference %in% c("Python", "R", "Matlab", "SAS", "C", "Java"), first_language, "Other"))
survey <- survey %>%
mutate(first_language = ifelse(language_preference %in% c("Python", "R", "Matlab", "SAS", "C", "Java"), first_language, "Other"))
survey <- read.csv("../data/survey_responses.csv", stringsAsFactors = FALSE)[-c(1,2)] %>%
transmute(background = What.is.your.academic.background.,
coding_experience = How.many.years.of.coding.experience.do.you.have.prior.to.using.Python.R.,
coding_love = Do.you.enjoy.love.coding.,
first_language = Which.programming.language.did.you.learn.first.,
language_preference = Which.of.the.following.programming.languages.do.you.prefer.more.,
task_preference = What.is.your.favorite.data.science.task.)
survey <- survey %>%
rowwise() %>%
mutate(background = ifelse(background %in% c("Computer Science / Computer Engineering", "Mathematics / Statistics"), background,
ifelse(sum((str_detect(tolower(background), c("economics", "business", "finance")))) > 0 , "Business / Economics",
ifelse((str_detect(tolower(background), "eng")), "Engineering", "Other")
))) %>%
mutate(first_language = ifelse(language_preference %in% c("Python", "R", "Matlab", "SAS", "C", "Java"), first_language, "Other"))
survey %>%
group_by(first_language) %>%
count()
survey <- survey %>%
rowwise() %>%
mutate(background = ifelse(background %in% c("Computer Science / Computer Engineering", "Mathematics / Statistics"), background,
ifelse(sum((str_detect(tolower(background), c("economics", "business", "finance")))) > 0 , "Business / Economics",
ifelse((str_detect(tolower(background), "eng")), "Engineering", "Other")
))) %>%
mutate(first_language = ifelse(language_preference %in% c("Python", "R", "Matlab", "SAS", "C", "Java"), first_language, "Other"))
survey %>%
group_by(first_language) %>%
count()
survey <- read.csv("../data/survey_responses.csv", stringsAsFactors = FALSE)[-c(1,2)] %>%
transmute(background = What.is.your.academic.background.,
coding_experience = How.many.years.of.coding.experience.do.you.have.prior.to.using.Python.R.,
coding_love = Do.you.enjoy.love.coding.,
first_language = Which.programming.language.did.you.learn.first.,
language_preference = Which.of.the.following.programming.languages.do.you.prefer.more.,
task_preference = What.is.your.favorite.data.science.task.)
survey <- survey %>%
rowwise() %>%
mutate(background = ifelse(background %in% c("Computer Science / Computer Engineering", "Mathematics / Statistics"), background,
ifelse(sum((str_detect(tolower(background), c("economics", "business", "finance")))) > 0 , "Business / Economics",
ifelse((str_detect(tolower(background), "eng")), "Engineering", "Other")
))) %>%
mutate(first_language = ifelse(first_language %in% c("Python", "R", "Matlab", "SAS", "C", "Java"), first_language, "Other"))
survey %>%
group_by(first_language) %>%
count()
#Reads the data in from google sheets
#Stores raw data in data folder
#Stores the processed data in docs folder
my_sheets <- gs_ls()
suppressPackageStartupMessages(library("googlesheets"))
suppressPackageStartupMessages(library("dplyr"))
suppressPackageStartupMessages(library("readr"))
#Reads the data in from google sheets
#Stores raw data in data folder
#Stores the processed data in docs folder
my_sheets <- gs_ls()
getwd()
survey <- read.csv("../data/survey_responses.csv", stringsAsFactors = FALSE)[-c(1,2)]
survey <- read.csv("data/survey_responses.csv", stringsAsFactors = FALSE)[-c(1,2)]
names(survey) <- c("background", "coding_experience", "coding_love", "first_language",
"language_preference", "task_preference")
survey
View(survey)
survey <- read.csv("data/survey_responses.csv", stringsAsFactors = FALSE)[-c(1,2)]
View(survey)
names(survey) <- c("background", "coding_experience", "coding_love", "first_language",
"language_preference", "task_preference", "active_languages")
View(survey)
ggplot(data = survey[,c(6,7)]) +
geom_point(aes(x = survey[,6], y = survey[,7]))
suppressPackageStartupMessages(library("ggplot2"))
suppressPackageStartupMessages(library("dplyr"))
ggplot(data = survey[,c(6,7)]) +
geom_point(aes(x = survey[,6], y = survey[,7]))
View(survey)
categorical_plots <- function(x, i, responses, write_path, plot_name){
#Function to plot all the categorical variable
colnames(x) <- c("ax1", "Class")
n <- n_distinct(x[,1])
#Pie plots
p <-  x %>% group_by(ax1) %>%
summarise(count = n()) %>% ggplot() +
geom_bar(aes(x = "",
y = count, fill = ax1), alpha = 0.7, color = "black", stat = "identity") +
xlab(responses[i]) +
labs(title = paste("Pie chart for" ,responses[i])) +
scale_fill_brewer(palette = "Pastel1") +
coord_polar("y", start=0) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14))
#Proportion Plot
q <- x %>% group_by(ax1) %>% mutate(count = n()) %>%
ggplot(aes(fct_reorder(ax1,count, .desc = TRUE))) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = Class), position = "fill", color = "black", alpha = 0.7) +
xlab(responses[i]) +
labs(title = paste("Proportions for" ,responses[i]), y = "Proportion") +
scale_fill_brewer(palette= "Dark2") +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14))
#Save files
if(n > 3){
ggsave(plot = p + coord_flip(),
filename = paste(plot_name,".png",sep = ""),
path = write_path)
ggsave(plot = q + coord_flip(),
filename = paste(plot_name,"_prop.png",sep = ""),
path = write_path)
}
else
{
ggsave(plot = p,
filename = paste(plot_name,".png",sep = ""),
path = write_path)
ggsave(plot = q,
filename = paste(plot_name,"_prop.png",sep = ""),
path = write_path)
}
}
knitr::opts_chunk$set(echo = TRUE)
categorical_plots <- function(x, i, responses, write_path, plot_name){
#Function to plot all the categorical variable
colnames(x) <- c("ax1", "Class")
n <- n_distinct(x[,1])
#Pie plots
p <-  x %>% group_by(ax1) %>%
summarise(count = n()) %>% ggplot() +
geom_bar(aes(x = "",
y = count, fill = ax1), alpha = 0.7, color = "black", stat = "identity") +
xlab(responses[i]) +
labs(title = paste("Pie chart for" ,responses[i])) +
scale_fill_brewer(palette = "Pastel1") +
coord_polar("y", start=0) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14))
}
View(survey)
categorical_plots <- function(x, i, responses, plot_name){
#Function to plot all the categorical variable
colnames(x) <- c("ax1", "Class")
n <- n_distinct(x[,1])
#Pie plots
p <-  x %>% group_by(ax1) %>%
summarise(count = n()) %>% ggplot() +
geom_bar(aes(x = "",
y = count, fill = ax1), alpha = 0.7, color = "black", stat = "identity") +
xlab(responses[i]) +
labs(title = paste("Pie chart for" ,responses[i])) +
scale_fill_brewer(palette = "Pastel1") +
coord_polar("y", start=0) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14))
}
categorical_plots(survey[,c(6,5)], 6, "Preferred Data Science Task")
categorical_plots <- function(x, i, responses, plot_name){
#Function to plot all the categorical variable
colnames(x) <- c("ax1", "Class")
n <- n_distinct(x[,1])
#Pie plots
p <-  x %>% group_by(ax1) %>%
summarise(count = n()) %>% ggplot() +
geom_bar(aes(x = "",
y = count, fill = ax1), alpha = 0.7, color = "black", stat = "identity") +
xlab(responses[i]) +
labs(title = paste("Pie chart for" ,responses[i])) +
scale_fill_brewer(palette = "Pastel1") +
coord_polar("y", start=0) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14))
print(p)
}
categorical_plots(survey[,c(6,5)], 6, "Preferred Data Science Task")
categorical_plots(survey[,c(5,6)], 6, "Preferred Data Science Task")
#Pie plots
p <-  x %>% group_by(ax1) %>%
summarise(count = n()) %>% ggplot() +
geom_bar(aes(x = "",
y = count, fill = ax1), alpha = 0.7, color = "black", stat = "identity") +
xlab(responses[i]) +
labs(title = paste("Pie chart for" ,responses[i])) +
scale_fill_brewer(palette = "Pastel2") +
coord_polar("y", start=0) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14))
categorical_plots <- function(x, i, responses, plot_name){
#Function to plot all the categorical variable
colnames(x) <- c("ax1", "Class")
n <- n_distinct(x[,1])
#Pie plots
p <-  x %>% group_by(ax1) %>%
summarise(count = n()) %>% ggplot() +
geom_bar(aes(x = "",
y = count, fill = ax1), alpha = 0.7, color = "black", stat = "identity") +
xlab(responses[i]) +
labs(title = paste("Pie chart for" ,responses[i])) +
scale_fill_brewer(palette = "Pastel2") +
coord_polar("y", start=0) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14))
print(p)
}
categorical_plots(survey[,c(5,6)], 6, "Preferred Data Science Task")
categorical_plots <- function(x, i, responses, plot_name){
#Function to plot all the categorical variable
colnames(x) <- c("ax1", "Class")
n <- n_distinct(x[,1])
#Pie plots
p <-  x %>% group_by(ax1) %>%
summarise(count = n()) %>% ggplot() +
geom_bar(aes(x = "",
y = count, fill = ax1), alpha = 0.7, color = "black", stat = "identity") +
xlab(responses[i]) +
labs(title = paste("Pie chart for" ,responses[i]), fill = "") +
scale_fill_brewer(palette = "Accent") +
coord_polar("y", start=0) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14))
print(p)
}
categorical_plots(survey[,c(6,5)], 6, "Preferred Data Science Task")
categorical_plots <- function(x, i, responses, plot_name){
#Function to plot all the categorical variable
colnames(x) <- c("ax1", "Class")
n <- n_distinct(x[,1])
#Pie plots
p <-  x %>% group_by(ax1) %>%
summarise(count = n()) %>% ggplot() +
geom_bar(aes(x = "",
y = count, fill = ax1), alpha = 0.7, color = "black", stat = "identity") +
xlab(responses[i]) +
labs(title = paste("Pie chart for" ,responses[i]), fill = "") +
scale_fill_brewer(palette = "Accent") +
coord_polar("y", start=0) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.ticks = element_blank())
print(p)
}
categorical_plots(survey[,c(6,5)], 6, "Preferred Data Science Task")
categorical_plots <- function(x, i, responses, plot_name){
#Function to plot all the categorical variable
colnames(x) <- c("ax1", "Class")
n <- n_distinct(x[,1])
#Pie plots
p <-  x %>% group_by(ax1) %>%
summarise(count = n()) %>% ggplot() +
geom_bar(aes(x = "",
y = count, fill = ax1), alpha = 0.7, color = "black", stat = "identity") +
xlab(responses[i]) +
labs(title = paste("Pie chart for" ,responses[i]), fill = "") +
scale_fill_brewer(palette = "Accent") +
coord_polar("y", start=0) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.text.x = element_blank())
print(p)
}
categorical_plots <- function(x, i, responses, plot_name){
#Function to plot all the categorical variable
colnames(x) <- c("ax1", "Class")
n <- n_distinct(x[,1])
#Pie plots
p <-  x %>% group_by(ax1) %>%
summarise(count = n()) %>% ggplot() +
geom_bar(aes(x = "",
y = count, fill = ax1), alpha = 0.7, color = "black", stat = "identity") +
xlab(responses[i]) +
labs(title = paste("Pie chart for" ,responses[i]), fill = "") +
scale_fill_brewer(palette = "Dark2") +
coord_polar("y", start=0) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.text.x = element_blank())
print(p)
}
categorical_plots(survey[,c(6,5)], 6, "Preferred Data Science Task")
categorical_plots <- function(x, i, responses, plot_name){
#Function to plot all the categorical variable
colnames(x) <- c("ax1", "Class")
n <- n_distinct(x[,1])
#Pie plots
p <-  x %>% group_by(ax1) %>%
summarise(count = n()) %>% ggplot() +
geom_bar(aes(x = "",
y = count, fill = ax1), alpha = 0.7, color = "black", stat = "identity") +
xlab(responses[i]) +
labs(title = paste("Pie chart for" ,responses[i]), fill = "") +
scale_fill_brewer(palette = "Set2") +
coord_polar("y", start=0) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.text.x = element_blank())
print(p)
}
categorical_plots(survey[,c(6,5)], 6, "Preferred Data Science Task")
categorical_plots <- function(x, i, responses, plot_name){
#Function to plot all the categorical variable
colnames(x) <- c("ax1", "Class")
n <- n_distinct(x[,1])
#Pie plots
p <-  x %>% group_by(ax1) %>%
summarise(count = n()) %>% ggplot() +
geom_bar(aes(x = "",
y = count, fill = ax1), alpha = 0.7, color = "black", stat = "identity") +
xlab(responses[i]) +
labs(title = paste("Pie chart for" ,responses[i]), fill = "") +
scale_fill_brewer(palette = "Set1") +
coord_polar("y", start=0) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.text.x = element_blank())
print(p)
}
categorical_plots(survey[,c(6,5)], 6, "Preferred Data Science Task")
categorical_plots <- function(x, i, responses, plot_name){
#Function to plot all the categorical variable
colnames(x) <- c("ax1", "Class")
n <- n_distinct(x[,1])
#Proportion Plot
q <- x %>% group_by(ax1) %>% mutate(count = n()) %>%
ggplot(aes(fct_reorder(ax1,count, .desc = TRUE))) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = Class), position = "fill", color = "black", alpha = 0.7) +
xlab(responses[i]) +
labs(title = paste("Proportions for" ,responses[i]), y = "Proportion") +
scale_fill_brewer(palette= "Dark2") +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14))
print(p)
}
categorical_plots(survey[,c(6,5)], 6, "Preferred Data Science Task")
categorical_plots <- function(x, i, responses, plot_name){
#Function to plot all the categorical variable
colnames(x) <- c("ax1", "Class")
n <- n_distinct(x[,1])
#Proportion Plot
p <- x %>% group_by(ax1) %>% mutate(count = n()) %>%
ggplot(aes(fct_reorder(ax1,count, .desc = TRUE))) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = Class), position = "fill", color = "black", alpha = 0.7) +
xlab(responses[i]) +
labs(title = paste("Proportions for" ,responses[i]), y = "Proportion") +
scale_fill_brewer(palette= "Dark2") +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14))
print(p)
}
categorical_plots(survey[,c(6,5)], 6, "Preferred Data Science Task")
library(forcats)
categorical_plots <- function(x, i, responses, plot_name){
#Function to plot all the categorical variable
colnames(x) <- c("ax1", "Class")
n <- n_distinct(x[,1])
#Proportion Plot
p <- x %>% group_by(ax1) %>% mutate(count = n()) %>%
ggplot(aes(fct_reorder(ax1,count, .desc = TRUE))) +
geom_bar(aes(y = (..count..)/sum(..count..), fill = Class), position = "fill", color = "black", alpha = 0.7) +
xlab(responses[i]) +
labs(title = paste("Proportions for" ,responses[i]), y = "Proportion") +
scale_fill_brewer(palette= "Dark2") +
theme_bw() + theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14))
print(p)
}
categorical_plots(survey[,c(6,5)], 6, "Preferred Data Science Task")
source("get_plots.R")
getwd()
source("src/get_plots.R")
